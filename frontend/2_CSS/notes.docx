CSS- Getting Started
    What is CSS?
        It is a language that is used to describe the style of a document.

    Basic Format of CSS:
        Syntax:
            h1{
                color:red;
            }

        How to include style?
            1.  Using Inline style

            2.  Using <style> tag:  
                    Style is added using the <style> in the same document.
                    e.g., <style>
                                h1{
                                    color:red;
                                }
                            </style>
                            
            3.  External Stylesheet:    
                    Writing CSS in a seperate document & linking it with HTML file.

            4.  Linking HTML with CSS file:
                    <head>
                        <link rel="stylesheet" ref="style.css">
                    </head>

            5.  Color Property:
                    Used to set the color of the foreground.
                    e.g., color:purple;
                        color:#ffffff;

            6.  Background color property:
                    Used to set the color of the background.
                    e.g., background-color:purple;
                        background-color:#ffffff

            7.  Color Systems:
                    i.      named system:       direclty using the name of the color.
                    ii.     rgb system:         red green blue, e.g., color=rgb(0,0,0); 
                                                can use google's color picker.  
                    iii.    Hexadecimal or Hex: e.g., color=#ffffff
                                                    letters: 0,1,2,3,4,5,6,7,8,9,A,B,C,D,E,F
                                                type of rgb format where ff-denote r, ff-denote g, ff-denote b.

            8.  Text Properties:    
                    i.      text-align: left, right, center, start, end, justify.

                    ii.     font-weight: ranges from 100-700, by default normal(400) and bold(700), bolder and lighter.

                    iii.    text-decoration:
                                sets the appearance of the decorative lines on text like underline.
                                e.g., text-decoration: underline
                                    text-decoration: overline
                                    text-decoration: line-through
                                for more such, search on mdn.

                                Usecase: used for removing underline from links on anchor tag.
                                            syntaax: a{
                                                text-decoration: none
                                            }
                    iv.     line-height:
                                controls the height of the line of text.
                                syntax: line-height: normal
                                        line-height: 2.5

                    v.      letter-spacing: controls the horizontal spacing behavior between text characters.
                                            e.g., letter-spacing: normal
                                                letter-spacing: 10px
                    vi.     font-size:

                Note:   96px = 1 inch, not suitable for responsive websites (in responsive websites we use relative units.)

    Font-family: specifies a prioritized list of one or more font family names.
                    font-family: arial;
                    font-family: avant garde, didot, sans-serif;
                    visit:  cssfontstack.com


CSS- Level 2
    1.  Selectors:
            Types:
                1.  Element Selectors: selects elements like h1, p, a etc.
                2.  Universal Selector: to select everything in a document, denoted using '*'.
                3.  Id-selector: selects an element based on the value of the element's id attribute, accessed using '#'.
                4.  Class-selector: selects an element based on their class attribute, accessed using '.'.
                5.  Descendent selector: selects all paragraphs inside divs.
                                            e.g., div p{
                                                property:value;
                                            }
                6.  Attribute selector: select elements based on the presence or value of a given attribute.
    
    2.  Combinators: used to combine multiple combinators.
            Types:
                1.  Adjacent sibling combinator: denoted using '+'.
                        e.g., heading3 that comes immediately after any paragraph.

                2.  Child combinator: denoted using '>'.
                        e.g., selects all buttons which are direct children of spans.

    3.  Pseudo Class:   A keyword added to a selector that specifies a special state of the selected element(s).
            Types:
                1.  :hover          : moving the cursor to an element        
                2.  :active         : when an element is clicked, e.g., button.
                3.  :checked        : generally used for radio buttons or checkbox.
                4.  nth-of-type

            Syntax:
                element_name:pseudo_class_type

    4.  Pseudo Elements:    A keyword added to a selector that lets you style a specific part of the selected part of the selected element(s).
            Types:
                1.  ::first-letter      : used to apply effects on the first letter of the html element under consideration.
                2.  ::first-line        : used to apply effects on the first line of the html element under consideration.
                3.  ::selection         : used to apply effects on the selected area of the html element under consideration.

    5.  CSS- Cascading StyleSheets:
            1.  Cascade in CSS?
                    The CSS cascade algorithm's job is to select CSS decorations in order to determine the correct values for CSS properties.
                        e.g., h2{
                            background-color: yellow;
                        }

                        h2{
                            background-color: blue;
                        }
                    
                    Applicable to single document as well as multiple documents.

                    In case of multiple documents, the css file which included in the last of the html file is considerable.

            2.  Selector specificity:
                    Specificity is an algorithm that calculates the weight that is applied to a given CSS declaration.

                    Priority rule:
                        id > class > element

                    Better: use more selectors to specifiy an element, then there are higher chances of changing the element.

                    Mathematically, specificity is a three digit number.
                        _____      _____       _____
                        id      class,          element
                                attribute       &
                                & pseudo        pseudo-
                                -class          element

                    Shown by VScode itself in that

                    Note:   If specificity same, then check cascading.

            3.  Inline Specificity:
                    Inline style are more specific than id.

                    Note:   Inline styles are the ones that are mentioned in the html file itself.

            4.  !important:
                    To show the most specific thing in document.

                    e.g., h2{
                        background-color: blue !important;
                    }

    6.  Inheritance in CSS:
            1.  Input elements and buttons, by-default doesn't inherit properties.

            2.  For input elements and button to inherit properties, we need to write :
                    input{
                        background-color: inherit;
                    }
                    button{
                        background-color: inherit;
                    }

            3.  Every property by-default doesn't get inherited.
                    e.g., width, height, border.

            4.  Important:
                    While selecting colors for designing webpages, we can use the followings:
                        1. coolors for color pallets.
                        2. canva for color pallets.
                        3. colorspace for color pallets.


INTERMEDIATE CSS

CSS- Level 3

    1.  Box-Model in CSS:
        i.      Height:     By default, it sets the content area height of the element.
                                Syntax: div{
                                    height: 10px;
                                }

        ii.     Width:      By default, it sets the content area width of the element.
                                Syntax: div{
                                    width: 300px;
                                }

        iii.    Border:     Used to set an element's border.

                            Types:
                                a.  border-width
                                b.  border-style
                                c.  border-color

                            Border shorthand:   width | style | color

                            Border sides:   To control an individual side of the box.
                                a.  border-left
                                b.  border-right
                                c.  border-top
                                d.  border-bottom

                                Syntax: border-left-color: orange;

                            Border radius:  Used to round the corners of an element's outer border edge.
                                                e.g., div{
                                                    border-radius: 15px;
                                                }

                                                div{
                                                    border-radius: 50%;
                                                }

        iv.     Padding:    
                    Types:
                        a.  padding-left:
                        b.  padding-right:
                        c.  padding-top:
                        d.  padding-bottom:

                    Padding shorthand:
                        a.  for all 4 sides:
                                padding: 50px;

                        b.  top & bottom | left & right:
                                padding: 1px 2px;

                        c.  top | left & right | bottom:
                                padding: 1px 2px 3 px;

                        d.  top | right | bottom | left:
                                padding: 1px 2px 3px 4px;
                                (clockwise)

        v.      Margin: To set spacing on the outside of border.
                    Types:
                        a.  margin-left:
                        b.  margin-right:
                        c.  margin-top:
                        d.  margin-bottom:

                    Margin-shorthand:
                        a.  for all 4 sides:
                                margin: 50px;
                        b.  top & bottom | left & right:
                                margin: 1px 2px;
                        c.  top | left & right | bottom:
                                margin: 1px 2px 3px;
                        d.  top | right | bottom | left:
                                margin: 1px 2px 3px 4px;

    2.  Display:
            It sets whether an element is treated as a block or inline element and the layout used for its children.

            Types:
                display:inline
                display:block
                display:inline-block
                display:none

    3.  Units in CSS:
            Types:
                A.  Absolute Units:
                        i.      px
                        ii.     pt
                        iii.    pc
                        iv.     cm
                        v.      mm
                        vi.     in
                
                B.  Relative Units:
                        i.      %
                        ii.     em
                        iii.    rem
                        iv.     ch
                        v.      vh
                        vi.     vw + manymore

                Percentage (%) Relative Unit:
                    It is often used to define a size as relative to an element's parent object.
                    e.g., width: 33.33% //relative to the parent
                        margin-left: 50% //relative to the parent-size (i.e., parent's height and width)

                Em relative unit:
                    Font-size of the parent, in the case of typographical properties like font-size and font size of
                    the element itself, in the case of other properties like width.
                    e.g., outer{
                        height: 40px;
                        width: 400px;
                        border: 2px solid black;
                        background-color: pink;
                        font-size: 20px;
                    }

                    inner{
                        height: 100px;
                        width: 100px;
                        background-color: cornflower;
                        font-size: 2em;
                    }

                    Here 2em means double of parent's, similarly 3 em, 1.5em, 0.5em

                    inner{
                        font-size: 10px;
                        padding: 1em; = 30px; (em relative to itself.)
                    }

                    Drawback of Em:
                        Snowball effect in nested elements.

    4.  Rem (Root em):
            Font-size of the root element.

            For an html document, the root element is <html>.
            So, rem will work according to that. Here, font-size is changing based on
            <html>, not <section>.


CSS- Level 4

    1.  Alpha Channel:  
            Sets the opacity for a color.

            Ranges from 0 to 1.

            rgba(255, 255, 255, 0.3)

            rgba in hexcode:
                starting 6 digits represent colors, last 4 digits represent opacity.

            opacity in haexcode ranges from 00-ff.

    2.  Opacity Property:
            Sets the opacity for the element.

            Ranges from 0 to 1.

            Syntax:
                opacity: 0.5

    3.  CSS Transitions:
            Transitions enable you to define the transition between two states of an element.
                e.g., transition: 2s;

            Properties:
                1.  transition-delay
                2.  transition-duration

            Transition shorthand:
                Syntax:
                    property name | duration | timing-function | delay

                For more, visit MDN website.

            For centering an html or div in a website, use the followings:
                margin: 0 auto;
    
    4.  CSS Transforms:
            This property lets you rotate, scale, skew, or translate an element.

            Syntax:
                tranform: rotate(45deg) scale(2) translate(3px);

            Properties:
                i.      rotate:
                            syntax:
                                transform: rotate(45deg);
                                transform: rotate(-45deg);

                ii.     scale:  
                            stretches the element along x and y both.

                            syntax:
                                transform: scale(0.5);
                                transform: scale(1.5);

                            Could be implemented using scaleX and scaleY, 
                                stretches the element individually along x or y axis.

                            Syntax:
                                transform: scaleX(0.5);
                                transform: scaleY(2);

                iii.    translate:
                            Moves the element upto a certain distance in 2D.
                            
                            Syntax:
                                transform: translate(100px, 100px);
                                transform: translateX(100px);
                                transform: translateY(50px);
                                tranform: translate(-50px);

                iv.     skew:
                            Tilting the element in some degrees.
                            
                            Syntax:
                                similar to rotate.

                                transform: skew(50deg);

                            Note: skewing an element along 90deg will cause disappeared element
                                    or just a point.

            Note: Tranform properties applied to an element is also applied to the elements
                    inside.

    5.  Box Shadow:
            It adds shadow effects around an element's frame.

            Syntax:
                box-shadow: x_offset | y_offset | blur_radius | color

            e.g.,
                box-shadow: 2px 2px 10px green;

    6.  Background Image:
            Lets you set an image as a background.

            Website:    Unsplash.com (For higher resolution free)

            Syntax:
                background-image: url("something");
                background-size: contain / cover / auto;

    7.  Position:
            The position CSS property sets how an element is positioned in a document.

            Properties:
                i.      top
                ii.     right
                iii.    bottom
                iv.     left
            The above properties determines the final location of positioned elements.

            Attributes:
                i.      static:
                            The top, right, bottom, left and z-index properties have no effect.

                            This is the default value.

                ii.     relative:
                            The offset is relative to itself based on the values of top, right,
                            bottom, and left.
                            
                iii.    absolute:
                            The element is removed from the normal document flow, and no space is
                            created for the element in the page layout.

                            It is positioned relative to its closest positioned ancestor, if any,
                            otherwise, it is placed relative to the initial containing block.

                            This attribute assigns space to the element under consideration relative
                            to the parent element or the ancestor element.

                            Also, this attribute doesn't assign any space individually to the element
                            consideration, i.e., the position or place where the element is currently
                            placed in the document is the only space that belong's to the element and 
                            no other space.

                iv.     fixed:
                            The element is removed from the normal document flow, and no space is created
                            for the element in the page layout.

                            It is positioned relative to the initial containing block established by the
                            viewport.

                v.      sticky:
                            Refer to MDN.   

                    
